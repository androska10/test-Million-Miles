version: '3.8'

services:
  web:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./:/var/www
      - ./docker/development/nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - php-fpm
    networks:
      - laravel

  php-fpm:
    build:
      context: .
      dockerfile: docker/development/php-fpm/Dockerfile  # теперь этот файл существует!
      args:
        UID: ${UID:-1000}
        GID: ${GID:-1000}
        XDEBUG_ENABLED: ${XDEBUG_ENABLED:-true}
        XDEBUG_MODE: develop,debug
        XDEBUG_HOST: host.docker.internal
    environment:
      - XDEBUG_MODE=develop,debug
      - XDEBUG_START_WITH_REQUEST=yes
    volumes:
      - ./:/var/www
    expose:
      - "9000"
    networks:
      - laravel
    depends_on:
      - mysql

  workspace:
    build:
      context: .
      dockerfile: docker/development/workspace/Dockerfile
      args:
        UID: ${UID:-1000}
        GID: ${GID:-1000}
    dns:
      - 8.8.8.8
      - 1.1.1.1
    stdin_open: true
    tty: true
    volumes:
      - ./:/var/www
    networks:
      - laravel
    working_dir: /var/www

  mysql:
    image: mysql:8.0
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - laravel

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - laravel

networks:
  laravel:
    driver: bridge

volumes:
  mysql-data: